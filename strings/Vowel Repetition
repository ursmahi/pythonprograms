PROBLEM:

Luffy likes to repeat vowel letters when he writes words. For example, instead of the word "onepiece" he can write "oneeepiiieceeee".
Zoro does not like such behavior, so he wants to write a program to format the words written by Luffy. This program must combine all consecutive equal vowels to a single vowel.

The vowel letters are "a", "e", "i", "o", "u" and "y".(including 'y')

There are exceptions: if letters "e" or "o" repeat in a row exactly 2 times, like in words "feet" and "foot", the program must skip them and do not transform in one vowel. For example, the word "iiiimpleeemeentatiioon" must be converted to the word "implemeentatioon".

Zoro is very busy and asks you to help him and write the required program.

Input Format:

The first line contains the integer n — the number of letters in the word written by Luffy.

The second line contains the string s which has length that equals to n and contains only lowercase English letters — the word written by Luffy.

Constraints

Print the single string — the word written by Luffy converted according to the rules described in the statement.

Output Format

1 ≤ n ≤ 100 000,

Sample Input 0

13
pobeeeedaaaaa
Sample Output 0

pobeda
Sample Input 1

22
iiiimpleeemeentatiioon
Sample Output 1

implemeentatioon





CODE:

def vowel(st):
    s=['a','e','i','o','u','y']
    if st in s:
        return 1;
    else:
        return 0;
k=int(input())
s=input()
c=[]
j=0
while(j!=len(s)):
    g=vowel(s[j])
    if(g==0):
        c.append(s[j])
    else:
        if(s[j]=='e' and s[j+1]=='e' and s[j+2]!='e'):
            m="e";
            c.append(m)
        elif(s[j]=='o' and s[j+1]=='o' and s[j+2]!='o'):
            m='o'
            c.append(m)
        else:
            while(j!=len(s)-1 and s[j]==s[j+1]):
                j=j+1
            c.append(s[j])
    j=j+1
d="".join(c)
print(d)
